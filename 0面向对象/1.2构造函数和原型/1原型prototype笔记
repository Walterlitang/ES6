构造函数方法很好用，但是每创建一个对象就会开辟一个新的内存空间来存放函数，太浪费空间

构造函数通过原型分配的函数是所有对象共享的

可以把那些不变的方法直接定义在 prototype 对象上，这样所有对象的实例就可以共享这些方法了

原型是什么？
    原型是一个对象，称为prototype（原型对象）
原型的作用？
    共享方法

公共的属性放在构造函数里，公共的方法放在原型对象里。


对象为什么能访问原型对象里的方法？
    对象原型 _proto_：
        对象都会有一个属性 _proto_ 指向构造函数的 prototype 原型对象，
        之所以我们可以使用构造函数的 prototype 原型对象的属性和方法，就是因为对象有 _proto_ 原型的存在

方法查找规则：
    首先看 实例对象 身上是否有方法，如果有就执行这个对象上的方法
    如果没有，因为有 __proto__ 的存在，就去构造函数的原型对象 prototype 身上去查找


__proto__ 对象原型和 原型对象 prototype 是等价的
__proto__ 对象原型的意义就在于为对象的查找机制提供一个方向，或者一条路线，但是它是一个非标准属性，
    一次在实际开发中，不可以使用这个属性，他只是内部指向原型对象prototype

对象原型和构造函数原型对象里面都有一个属性constructor属性，
constructor主要用于记录该对象引用于那个构造函数，它可以让原型对象重新指向原来的构造函数
