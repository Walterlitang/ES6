改变函数内部this的指向
    call()：
        继承父构造函数的属性
        用 Son.prototype=new Father() 继承父构造函数的方法

    apply()：调用函数，改变 this 的指向，但接受的参数必须是数组（伪数组）

    bind()：改变this指向，但不调用，但会返回改变的新函数
            bind（）不会立即调用

    
总结：
    都可以改变函数内部 this 的指向

    1.call和apply会调用函数，并且改变函数内部的this指向
    2.call和apply传递的参数不一样，call传递的参数aru1,aru2...形式，apply必须伪数组的形式[argu](且只会输出字符或数字等)
    3.bind不会调用函数，会返回一个改变过的新函数，可以改变函数内部的指向

应用场景：
 1.call经常做继承
 2.apply经常跟数组有关，比如借助于数学对象实现数组最大值和最小值
 3.bind不调用函数又要改变函数内部的指向